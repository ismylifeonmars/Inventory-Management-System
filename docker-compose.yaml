version: '3.8'

services:

  db:
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changemeinprod!
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8888:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=changemeinprod!
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRINGDOC_API_DOCS.PATH=/v3/api-docs
      - SPRINGDOC_SWAGGER_UI_PATH=/swagger-ui.html
      - SPRINGDOC_SWAGGER_UI_ENABLED=true
      - SPRINGDOC_PACKAGESTOSCAN=com.ravemaster.inventory
      - SPRINGFOC_PATHSTOMATCH=/api/v1/**
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - app-network

networks:
    app-network:
      driver: bridge

volumes:
    db-data: